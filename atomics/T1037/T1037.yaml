---
attack_technique: T1037
display_name: Logon Scripts

atomic_tests:
- name: Logon Scripts
  description: |
    Adds a registry value to run batch script created in the C:\Windows\Temp directory.

  supported_platforms:
    - windows

  input_arguments:
    script_path:
      description: Path to .bat file
      type: String
      default: $env:SystemRoot\Temp\art.bat
    script_command:
      description: Command To Execute
      type: String
      default: echo Art "Logon Script" atomic test was successful. >> %USERPROFILE%\desktop\T1037-log.txt

  executor:
    name: command_prompt
    elevation_required: false
    command: |
      echo cmd /c "#{script_command}" > #{script_path}
      REG.exe ADD HKCU\Environment /v UserInitMprLogonScript /t REG_SZ /d "#{script_path}"
    cleanup_command: |
      REG.exe DELETE HKCU\Environment /v UserInitMprLogonScript /f
      del #{script_path} >nul 2>nul
      del "%USERPROFILE%\desktop\T1037-log.txt" >nul 2>nul

- name: Startup Folder Script
  description: |
    A batch file created to run on startup when placed in the start menu folder
  supported_platforms:
    - windows

  input_arguments:
    user_command:
      description: Path to .bat file
      type: String
      default: echo Art `"Startup Folder Script`" atomic test for $env:USERNAME was successful. >> $env:USERPROFILE\desktop\T1037-log.txt
    system_command:
      description: Command To Execute
      type: String
      default: echo Art `"Startup Folder Script`" atomic test for $env:COMPUTERNAME was successful. >> $env:USERPROFILE\desktop\T1037-log.txt

  executor:
    name: powershell
    elevation_required: true
    command: |
      New-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037.bat" -force
      Set-Content "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037.bat" "cmd /c #{user_command}"
      New-Item "$env:ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\T1037.bat" -force
      Set-Content "$env:ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\T1037.bat" "cmd /c #{system_command}"
    cleanup_command: |
      Remove-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037.bat" -ErrorAction Ignore
      Remove-Item "$env:ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\T1037.bat" -ErrorAction Ignore
      Remove-Item "$env:USERPROFILE\desktop\T1037-log.txt" -ErrorAction Ignore

- name: Scheduled Task Startup Script
  description: |
    Run an exe on user logon or system startup
  supported_platforms:
    - windows
  executor:
    name: command_prompt
    elevation_required: true
    command: |
      schtasks /create /tn "T1037_OnLogon" /sc onlogon /tr "cmd.exe /c calc.exe"
      schtasks /create /tn "T1037_OnStartup" /sc onstart /ru system /tr "cmd.exe /c calc.exe"
    cleanup_command: |
      schtasks /delete /tn "T1037_OnLogon" /f
      schtasks /delete /tn "T1037_OnStartup" /f

- name: Logon Scripts - Mac
  description: |
    Mac logon script

  supported_platforms:
    - macos

  executor:
    name: manual
    steps: |
      1. Create the required plist file

          sudo touch /private/var/root/Library/Preferences/com.apple.loginwindow.plist

      2. Populate the plist with the location of your shell script

          sudo defaults write com.apple.loginwindow LoginHook /Library/Scripts/AtomicRedTeam.sh

      3. Create the required plist file in the target user's Preferences directory

      	  touch /Users/$USER/Library/Preferences/com.apple.loginwindow.plist

      4. Populate the plist with the location of your shell script

      	  defaults write com.apple.loginwindow LoginHook /Library/Scripts/AtomicRedTeam.sh

- name: File Ending with .jse in Startup Folder
  description: |
    Malware can create .jse files in the startup folder to establish persistence
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: true
    command: |
      New-Item "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\T1037globalstartup.jse"
      New-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037userstartup.jse"
    cleanup_command: |
      Remove-Item "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\T1037globalstartup.jse"
      Remove-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037userstartup.jse"

- name: vbs file created in Startup folder
  description: |
    https://twitter.com/SBousseaden/status/1218183735889272832?s=20
    Running vbs at startup to establish backdoor
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: true
    command: |
      New-Item "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\T1037vbsglobalstartup.vbs"
      New-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037vbsuserstartup.vbs"
    cleanup_command: |
      Remove-Item "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\T1037vbsglobalstartup.vbs"
      Remove-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\T1037vbsuserstartup.vbs"

- name: Suspicious File Type Created and Executed from Startup Folder
  description: |
    Run multiple programs of suspicious types from the startup folder. Potential detections can be written for the process tree or file extension
  supported_platforms:
    - windows
  input_arguments:
    commands_to_run:
      description: Names of commands to run in this test
      type: String
      default: "'jse bat vbs'"
  executor:
    name: powershell
    elevation_required: true
    command: |
      $CommandsString = #{commands_to_run}
      $CommandsArray = $CommandsString.split(" ")
      Write-Host $CommandsArray
      foreach ($command in $CommandsArray) {
          if ($command -eq "jse") {
            Copy-Item $PathToAtomicsFolder\T1037\src\jsestartup.jse "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\jsestartup.jse"
            C:\Windows\System32\Cscript.exe "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\jsestartup.jse"
          } elseif ($command -eq "bat") {
            Copy-Item $PathToAtomicsFolder\T1037\src\batstartup.bat "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\batstartup.bat"
            Start-Process "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\batstartup.bat"
          } elseif ($command -eq "vbs") {
            Copy-Item $PathToAtomicsFolder\T1037\src\vbsstartup.vbs "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\vbsstartup.vbs"
            C:\Windows\System32\Cscript.exe "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\vbsstartup.vbs"
          }
      }
    cleanup_command: |
      Remove-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\jsestartup.jse"
      Remove-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\batstartup.bat"
      Remove-Item "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\vbsstartup.vbs"
